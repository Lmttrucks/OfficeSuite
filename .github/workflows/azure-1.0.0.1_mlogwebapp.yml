# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - MLogWebApp

on:
  push:
    branches:
      - Azure-1.0.0.1
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install and Build Frontend
        run: |
          cd frontend  # Navigate to the frontend directory
          npm install  # Install React dependencies
          npm run build # Build the React application

      - name: Clean Up Nested Build Directories
        run: |
          if [ -d "frontend/build/build" ]; then
            echo "Cleaning up nested build directory..."
            rm -rf frontend/build/build
          fi

      - name: Prepare Deployment Package
        run: |
          # Remove any existing deployment_package directory
          if [ -d "deployment_package" ]; then
            rm -rf deployment_package
          fi

          # Create the deployment_package directory
          mkdir -p deployment_package/backend
          mkdir -p deployment_package/frontend/build

          # Copy backend files into the deployment package
          cp -r backend/* deployment_package/backend/

          # Copy frontend build files into the deployment package
          if [ -d "frontend/build" ]; then
            cp -r frontend/build/* deployment_package/frontend/build/
          else
            echo "Error: frontend/build directory does not exist. Ensure the frontend build step is successful."
            exit 1
          fi

          # Copy the root package.json into the deployment package
          cp package.json deployment_package/

          # Navigate into the deployment package directory
          cd deployment_package

          # Zip the deployment package
          zip -r ../release.zip .

      - name: Upload Deployment Artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Download Deployment Artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-package

      - name: Unzip Deployment Artifact
        run: unzip -o release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B3E067979ECB431CAE8EDFB81651C920 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0F6FB07E6C9940BC956BDD5305BB674B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D3401DF5C43E48639D0145A328B62C71 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MLogWebApp'
          slot-name: 'Production'
          package: release

